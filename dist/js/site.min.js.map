{"version":3,"sources":["webpack://hanako-wp/./node_modules/hanako-ts/dist-legacy/Collection/Core.js","webpack://hanako-wp/./node_modules/hanako-ts/dist-legacy/Collection/CSS.js","webpack://hanako-wp/./node_modules/hanako-ts/dist-legacy/Collection/Traversing.js","webpack://hanako-wp/./node_modules/hanako-ts/dist-legacy/Collection/HTML.js","webpack://hanako-wp/./node_modules/hanako-ts/dist-legacy/Collection/Dimensions.js","webpack://hanako-wp/./node_modules/hanako-ts/dist-legacy/Tools/EventManager.js","webpack://hanako-wp/./node_modules/hanako-ts/dist-legacy/Collection/Events.js","webpack://hanako-wp/./node_modules/hanako-ts/dist-legacy/Collection.js","webpack://hanako-wp/./node_modules/hanako-ts/dist-legacy/Tools/Helpers.js","webpack://hanako-wp/./node_modules/hanako-ts/dist-legacy/Tools/Network.js","webpack://hanako-wp/./node_modules/hanako-ts/dist-legacy/Framework.js","webpack://hanako-wp/./node_modules/hanako-ts/dist-legacy/Tools/Debug.js","webpack://hanako-wp/./node_modules/hanako-ts/dist-legacy/Component.js","webpack://hanako-wp/./node_modules/hanako-ts/dist/Collection/Core.js","webpack://hanako-wp/./node_modules/hanako-ts/dist/Collection/CSS.js","webpack://hanako-wp/./node_modules/hanako-ts/dist/Collection/Traversing.js","webpack://hanako-wp/./node_modules/hanako-ts/dist/Collection/HTML.js","webpack://hanako-wp/./node_modules/hanako-ts/dist/Collection/Dimensions.js","webpack://hanako-wp/./node_modules/hanako-ts/dist/Tools/EventManager.js","webpack://hanako-wp/./node_modules/hanako-ts/dist/Collection/Events.js","webpack://hanako-wp/./node_modules/hanako-ts/dist/Collection.js","webpack://hanako-wp/./components/Debug/Traverse.ts","webpack://hanako-wp/./components/Debug/index.ts","webpack://hanako-wp/./src/ts/site.ts","webpack://hanako-wp/./components/Empty/index.ts","webpack://hanako-wp/./components/Menu/index.ts"],"names":["Core","selector","this","elements","Collection","document","querySelectorAll","nodeType","window","Array","prototype","slice","call","Symbol","iterator","length","callback","thisArg","forEach","item","index","get","newItem","isAlreadyInCollection","push","filteredElement","matches","add","CSS","super","className","hasClass","classList","contains","classNames","classNameList","split","remove","toggle","name","value","priority","property","style","setProperty","toString","getComputedStyle","getPropertyValue","Traversing","collection","previousElementSibling","nextElementSibling","parentNode","current","documentElement","isToBeAdded","element","HTML","firstChild","removeChild","cloneNode","itemsArray","isArray","items","insertBefore","appendChild","wrapper","wrapperCopy","append","innerHTML","textContent","setAttribute","getAttribute","removeAttribute","dataset","Dimensions","innerWidth","getBoundingClientRect","width","innerHeight","height","target","x","y","targetPosition","itemBoundingClientRect","difference","pageScroll","pageXOffset","pageYOffset","EventManager","eventCounter","uid","contextSelect","context","Object","defineProperty","writable","eventName","getContext","events","event","realTarget","eventTarget","parent","realItem","addEventListener","eventUID","removeEventListener","Events","eventNames","createEvent","initEvent","dispatchEvent","Helpers","ready","Promise","resolve","readyState","on","imagesLoaded","images","countLoadedImage","image","complete","scrollTo","to","duration","start","change","currentTime","animateScroll","t","b","c","setTimeout","parseHTML","html","tempDocument","implementation","createHTMLDocument","body","children","Network","httpRequest","parameters","_arguments","generator","dataType","requestInit","method","type","URLSearchParams","requestBody","key","entries","headers","Headers","response","fetch","url","text","JSON","parse","P","reject","fulfilled","step","next","e","rejected","result","done","then","apply","framework","base","assign","addNetwork","Debug","data","color","isEnabled","console","log","INFO","ACTION","WARNING","ERROR","SUCCESS","Component","typeName","isLoadedAfterImages","message","formatNode","node","id","classes","tagName","toLowerCase","traverse","object","level","open","close","Event","Node","properties","join","isDebugEnabled","_super","create","init","setupConsole","test","success","consoleElement","consoleConfig","sessionStorage","getItem","position","status","addClass","altKey","code","removeClass","setItem","stringify","toggleClass","empty","print","each","attr","before","after","showTime","time","date","Date","getHours","getMinutes","getSeconds","scrollTop","scrollHeight","button"],"mappings":"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","file":"js/site.min.js","sourcesContent":["import { Collection } from '../Collection';\n/**\n * A collection of HTML elements with shortcut methodes to simplify manipulation\n */\nexport class Core {\n    /**\n     * *selector* can be:\n     * - a string containing a CSS query\n     * - a single *Elem*\n     * - an array of *Elem*\n     */\n    constructor(selector) {\n        this.elements = [];\n        if (typeof selector == 'number')\n            return;\n        if (selector instanceof Collection)\n            return selector;\n        var elements = selector;\n        if (typeof selector === 'string')\n            elements = document.querySelectorAll(selector);\n        if (elements) {\n            if (elements.nodeType || elements === window)\n                elements = [elements];\n            this.elements = Array.prototype.slice.call(elements);\n            ;\n        }\n    }\n    /**\n     * @ignore\n     */\n    [Symbol.iterator]() {\n        return this.elements[Symbol.iterator]();\n    }\n    /**\n     * Return the number of *Elem* in the collection\n     *\n     * @category Collection\n     */\n    get length() {\n        return this.elements.length;\n    }\n    /**\n     * Execute a *callback* on every *Elem*\n     *\n     * @category Collection\n     */\n    forEach(callback, thisArg) {\n        this.elements.forEach(callback);\n    }\n    /**\n     * In contrary of *forEach* this function return each *Elem* as *Collection*.\n     *\n     * @category Collection\n     */\n    each(callback) {\n        this.forEach((item, index) => callback(new Collection(item), index));\n        return this;\n    }\n    /**\n     * Return collection's *Elem* or a single *Elem*\n     *\n     * @category Collection\n     *\n     * @param index Index of the element in the collection\n     */\n    get(index) {\n        return this.elements[index < 0 ? index + this.elements.length : index];\n    }\n    ;\n    /**\n     * Return a new collection containing element at the specified index.\n     *\n     * @category Collection\n    *\n    * @param index Index of the element in the collection\n    */\n    eq(index) {\n        return new Collection(this.get(index));\n    }\n    ;\n    /**\n     * Add an *Elem* to the collection\n     *\n     * @category Collection\n     */\n    add(newItem) {\n        var isAlreadyInCollection = false;\n        this.forEach((item) => {\n            if (newItem === item)\n                isAlreadyInCollection = true;\n        });\n        if (!isAlreadyInCollection)\n            this.elements.push(newItem);\n    }\n    /**\n     * Search for a specific *Elem* in the collection\n     *\n     * @category Collection\n     *\n     * @param selector A css selector to search\n     */\n    search(selector) {\n        var filteredElement = new Collection();\n        this.forEach((item) => {\n            if (item.matches(selector))\n                filteredElement.add(item);\n        });\n        return filteredElement;\n    }\n}\n","import { Core } from './Core';\nexport class CSS extends Core {\n    constructor(selector) {\n        super(selector);\n    }\n    /**\n     * Return *true* if any *Elem* has the given class\n     *\n     * @category CSS class\n     */\n    hasClass(className) {\n        let hasClass = false;\n        this.forEach((item) => {\n            if (item.classList.contains(className))\n                hasClass = true;\n        });\n        return hasClass;\n    }\n    /**\n     * Add the given *classNames* to all *Elem*\n     *\n     * @category CSS class\n     */\n    addClass(classNames) {\n        var classNameList = classNames.split(' ');\n        this.forEach((item) => {\n            item.classList.add(...classNameList);\n        });\n        return this;\n    }\n    /**\n     * Remove the given *classNames* to all *Elem*\n     *\n     * @category CSS class\n     */\n    removeClass(classNames) {\n        var classNameList = classNames.split(' ');\n        this.forEach((item) => {\n            item.classList.remove(...classNameList);\n        });\n        return this;\n    }\n    /**\n     * Toggle the given *classNames* to all *Elem*\n     *\n     * @category CSS class\n     */\n    toggleClass(classNames) {\n        var classNameList = classNames.split(' ');\n        classNameList.forEach((className) => {\n            this.forEach((item) => {\n                item.classList.toggle(className);\n            });\n        });\n        return this;\n    }\n    css(name, value, priority) {\n        if (value || typeof name == 'object') {\n            this.elements.forEach((item) => {\n                if (!priority)\n                    priority = '';\n                if (typeof name == 'object') {\n                    for (let property in name) {\n                        item.style.setProperty(property, name[property].toString(), priority);\n                    }\n                }\n                else {\n                    item.style.setProperty(name, value, priority);\n                }\n            });\n            return this;\n        }\n        else {\n            if (this.elements.length == 0)\n                return '';\n            let styles = window.getComputedStyle(this.elements[0]);\n            return styles.getPropertyValue(name);\n        }\n    }\n}\n","import { CSS } from './CSS';\nimport { Collection } from '../Collection';\nexport class Traversing extends CSS {\n    constructor(selector) {\n        super(selector);\n    }\n    /**\n     * Return the previous element for each *Elem* in the collection\n     *\n     * @category Traversing\n     */\n    prev() {\n        var collection = new Collection();\n        this.forEach((item) => {\n            collection.add(item.previousElementSibling);\n        });\n        return collection;\n    }\n    /**\n     * Return the previous element for each *Elem* in the collection\n     *\n     * @category Traversing\n     */\n    next() {\n        var collection = new Collection();\n        this.forEach((item) => {\n            collection.add(item.nextElementSibling);\n        });\n        return collection;\n    }\n    /**\n     * Return the first element in collection\n     *\n     * @category Traversing\n     * @returns Collection\n     */\n    first() {\n        return new Collection(this.elements[0]);\n    }\n    /**\n     * Return the last element in collection\n     *\n     * @category Traversing\n     * @returns Collection\n     */\n    last() {\n        return new Collection(this.elements[this.elements.length - 1]);\n    }\n    /**\n     * Return the parent element for each *Elem* in the collection\n     *\n     * @category Traversing\n     */\n    parent() {\n        var collection = new Collection();\n        if (this.elements.length > 0)\n            collection = new Collection(this.get(0).parentNode);\n        return collection;\n    }\n    /**\n     * Search for a parent element matching the *selector*\n     *\n     * @category Traversing\n     *\n     * @param selector A css selector\n     */\n    parents(selector) {\n        var collection = new Collection();\n        if (this.elements.length == 0)\n            return collection;\n        var current = this.elements[0];\n        while (current.parentNode != null && current.parentNode != document.documentElement) {\n            let isToBeAdded = true;\n            if (selector) {\n                isToBeAdded = false;\n                if (current.parentNode.matches(selector))\n                    isToBeAdded = true;\n            }\n            if (isToBeAdded)\n                collection.add(current.parentNode);\n            current = current.parentNode;\n        }\n        return collection;\n    }\n    /**\n     * Search of children matching the *selector*\n     *\n     * @category Traversing\n     *\n     * @param selector A css selector\n     */\n    find(selector) {\n        var collection = new Collection();\n        if (this.elements.length == 0)\n            return collection;\n        var foundElements = this.elements[0].querySelectorAll(selector);\n        foundElements.forEach((element) => {\n            collection.add(element);\n        });\n        return collection;\n    }\n}\n","import { Traversing } from './Traversing';\nimport { Collection } from '../Collection';\nexport class HTML extends Traversing {\n    constructor(selector) {\n        super(selector);\n    }\n    /**\n     * Remove the *Elem* for the DOM.\n     *\n     * @category HTML manipulation\n     *\n     */\n    remove() {\n        this.elements.forEach((item) => {\n            item.remove();\n        });\n        return this;\n    }\n    /**\n     * Clear all DOM children of the *Elem*\n     *\n     * @category HTML manipulation\n     *\n     */\n    empty() {\n        this.elements.forEach((item) => {\n            while (item.firstChild)\n                item.removeChild(item.firstChild);\n        });\n        return this;\n    }\n    /**\n     * Return a clone of the collection\n     *\n     * @category HTML manipulation\n     *\n     */\n    clone() {\n        let collection = new Collection();\n        this.elements.forEach((item) => {\n            collection.add(item.cloneNode(true));\n        });\n        return collection;\n    }\n    /**\n     * Insert content, specified by the parameter, to the beginning of each element in the collection\n     *\n     * @category HTML manipulation\n     *\n     */\n    prepend(itemsArray) {\n        if (!Array.isArray(itemsArray))\n            itemsArray = [itemsArray];\n        itemsArray.forEach((items) => {\n            items.forEach((item) => {\n                if (this.elements.length == 0)\n                    return;\n                this.elements[0].insertBefore(item, this.elements[0].firstChild);\n            });\n        });\n        return this;\n    }\n    /**\n     * Insert content, specified by the parameter, to the end of each element in the collection\n     *\n     * @category HTML manipulation\n     *\n     */\n    append(itemsArray) {\n        if (!Array.isArray(itemsArray))\n            itemsArray = [itemsArray];\n        itemsArray.forEach((items) => {\n            items.forEach((item) => {\n                if (this.elements.length == 0)\n                    return;\n                this.elements[0].appendChild(item);\n            });\n        });\n        return this;\n    }\n    /**\n     * Wrap each element in the collection with specified element\n     *\n     * @category HTML manipulation\n     *\n     */\n    wrap(wrapper) {\n        this.elements.forEach((item) => {\n            if (wrapper.length == 0)\n                return;\n            var wrapperCopy = wrapper.get(0).cloneNode();\n            item.parentNode.insertBefore(wrapperCopy, item);\n            wrapperCopy.appendChild(item);\n        });\n        return this;\n    }\n    val(value) {\n        if (typeof value != 'string' && typeof value != 'number') {\n            if (this.elements.length == 0)\n                return '';\n            return this.elements[0].value;\n        }\n        else {\n            this.elements.forEach((item) => {\n                item.value = value.toString();\n            });\n            return this;\n        }\n    }\n    html(value, append) {\n        if (typeof value != 'string' && typeof value != 'number') {\n            if (this.elements.length == 0)\n                return '';\n            return this.elements[0].innerHTML;\n        }\n        else {\n            this.elements.forEach((item) => {\n                if (append) {\n                    item.innerHTML += value.toString();\n                }\n                else {\n                    item.innerHTML = value.toString();\n                }\n            });\n            return this;\n        }\n    }\n    text(value) {\n        if (typeof value != 'string' && typeof value != 'number') {\n            if (this.elements.length == 0)\n                return '';\n            return this.elements[0].textContent;\n        }\n        else {\n            this.elements.forEach((item) => {\n                item.textContent = value.toString();\n            });\n            return this;\n        }\n    }\n    attr(name, value) {\n        if (!value) {\n            if (this.elements.length == 0)\n                return '';\n            return this.elements[0].getAttribute(name);\n        }\n        else {\n            this.elements.forEach((item) => {\n                item.setAttribute(name, value);\n            });\n            return this;\n        }\n    }\n    /**\n     * Remove an attribute on each element in the set.\n     *\n     * @category HTML manipulation\n     *\n     */\n    removeAttr(name) {\n        this.elements.forEach((item) => {\n            item.removeAttribute(name);\n        });\n        return this;\n    }\n    data(name, value) {\n        if (!value) {\n            if (this.elements.length == 0)\n                return '';\n            return this.elements[0].dataset[name];\n        }\n        else {\n            this.elements.forEach((item) => {\n                item.dataset[name] = value;\n            });\n            return this;\n        }\n    }\n}\n","import { HTML } from './HTML';\nimport { Collection } from '../Collection';\nexport class Dimensions extends HTML {\n    constructor(selector) {\n        super(selector);\n    }\n    width(value) {\n        if (value) {\n            this.elements.forEach((item) => {\n                value = (typeof value == 'string') ? value : value + 'px';\n                item.style.setProperty('width', value);\n            });\n            return this;\n        }\n        else {\n            if (this.elements.length == 0)\n                return 0;\n            if (this.elements[0] === window)\n                return window.innerWidth;\n            return this.elements[0].getBoundingClientRect().width;\n        }\n    }\n    height(value) {\n        if (value) {\n            this.elements.forEach((item) => {\n                value = (typeof value == 'string') ? value : value + 'px';\n                item.style.setProperty('height', value);\n            });\n            return this;\n        }\n        else {\n            if (this.elements.length == 0)\n                return 0;\n            if (this.elements[0] === window)\n                return window.innerHeight;\n            return this.elements[0].getBoundingClientRect().height;\n        }\n    }\n    /**\n     * Return element position relative to other element or document\n     *\n     * @category Dimensions\n     *\n     */\n    position(target) {\n        if (this.elements.length == 0)\n            return { x: 0, y: 0 };\n        if (typeof target == 'string')\n            target = new Collection(target);\n        const targetPosition = (target) ? { x: target.get(0).getBoundingClientRect().x, y: target.get(0).getBoundingClientRect().y } : { x: 0, y: 0 };\n        const itemBoundingClientRect = this.elements[0].getBoundingClientRect();\n        const difference = { x: itemBoundingClientRect.x - targetPosition.x, y: itemBoundingClientRect.y - targetPosition.y };\n        const pageScroll = (target) ? { x: 0, y: 0 } : { x: window.pageXOffset, y: window.pageYOffset };\n        return {\n            x: difference.x + pageScroll.x,\n            y: difference.y + pageScroll.y\n        };\n    }\n    /**\n     * Return element position in viewport\n     *\n     * @category Dimensions\n     *\n     */\n    viewportPosition() {\n        if (this.elements.length == 0)\n            return { x: 0, y: 0 };\n        const itemBoundingClientRect = this.elements[0].getBoundingClientRect();\n        return {\n            x: itemBoundingClientRect.x,\n            y: itemBoundingClientRect.y,\n        };\n    }\n}\n","import { Collection } from '../Collection';\nfunction checkParents(items, eventTarget) {\n    var realItem;\n    items.forEach((item) => {\n        if (item === eventTarget) {\n            realItem = item;\n            return;\n        }\n        var parent = eventTarget.parentNode;\n        while (parent !== document) {\n            if (item === parent) {\n                realItem = item;\n                return;\n            }\n            parent = parent.parentNode;\n        }\n    });\n    return realItem;\n}\nexport class EventManager {\n    static uid() {\n        return EventManager.eventCounter++;\n    }\n    static getContext(uid, item, selector) {\n        const contextSelect = (typeof selector == 'string') ? selector + '_' : '';\n        let context = '';\n        if (item === window) {\n            context = 'w_';\n        }\n        else if (item === document) {\n            context = 'd_' + contextSelect;\n        }\n        else {\n            context = 'e_' + contextSelect + uid + '_';\n            Object.defineProperty(item, 'eventUID', {\n                value: uid,\n                writable: true\n            });\n        }\n        return context;\n    }\n    static add(item, eventName, selector, callback) {\n        const context = EventManager.getContext(EventManager.uid(), item, selector) + eventName;\n        EventManager.events[context] = function (event) {\n            if (typeof selector == 'string') {\n                var realTarget = checkParents(new Collection(selector), event.target);\n                if (realTarget)\n                    callback.call(realTarget, event, new Collection(realTarget));\n            }\n            else {\n                callback.call(this, event, new Collection(this));\n            }\n        };\n        item.addEventListener(eventName, EventManager.events[context]);\n    }\n    static remove(item, eventName, selector) {\n        const uid = (item !== document && item !== window) ? item.eventUID : 0;\n        const context = EventManager.getContext(uid, item, selector) + eventName;\n        item.removeEventListener(eventName, EventManager.events[context]);\n        delete EventManager.events[context];\n    }\n}\nEventManager.eventCounter = 0;\nEventManager.events = {};\n","import { Dimensions } from './Dimensions';\nimport { EventManager } from '../Tools/EventManager';\nexport class Events extends Dimensions {\n    constructor(selector) {\n        super(selector);\n    }\n    on(eventNames, selector, callback) {\n        if (typeof eventNames == 'string')\n            eventNames = [eventNames];\n        if (typeof selector == 'function')\n            callback = selector;\n        eventNames.forEach((eventName) => {\n            this.forEach((item) => {\n                EventManager.add(item, eventName, selector, callback);\n            });\n        });\n        return this;\n    }\n    /**\n     * Remove an event handler function for one or more events to the selected elements.\n     *\n     * @category Events\n     *\n     */\n    off(eventNames, selector) {\n        if (typeof eventNames == 'string')\n            eventNames = [eventNames];\n        eventNames.forEach((eventName) => {\n            this.forEach((item) => {\n                EventManager.remove(item, eventName, selector);\n            });\n        });\n        return this;\n    }\n    /**\n     * Trigger an event handler function for one or more events to the selected elements.\n     *\n     * @category Events\n     *\n     */\n    trigger(eventName) {\n        const event = document.createEvent('HTMLEvents');\n        event.initEvent(eventName, true, false);\n        this.forEach((item) => {\n            item.dispatchEvent(event);\n        });\n        return this;\n    }\n}\n","import { Events } from './Collection/Events';\n/**\n * A collection of HTML elements with shortcut methodes to simplify manipulation\n */\nexport class Collection extends Events {\n    /**\n     * *selector* can be:\n     * - a string containing a CSS query\n     * - a single *Elem*\n     * - an array of *Elem*\n     */\n    constructor(selector) {\n        super(selector);\n    }\n}\n","import { Collection } from '../Collection';\nimport { $ } from '../Framework';\nfunction easeInOutQuad(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1)\n        return c / 2 * t * t + b;\n    t--;\n    return -c / 2 * (t * (t - 2) - 1) + b;\n}\n/**\n * Await for document to be ready\n */\nexport function ready() {\n    return new Promise((resolve) => {\n        if (document.readyState != 'loading') {\n            resolve();\n        }\n        else {\n            $(document).on('DOMContentLoaded', function () {\n                resolve();\n            });\n        }\n    });\n}\n/**\n * Await for a set of images to be loaded.\n * If parameter *images* is omitted, the function takes all document image.\n */\nexport function imagesLoaded(images) {\n    return new Promise((resolve) => {\n        var images = (images) ? images : $('img');\n        var imagesLoaded = 0;\n        function countLoadedImage() {\n            if (++imagesLoaded == images.length)\n                resolve();\n        }\n        images.forEach((image) => {\n            if (image.complete) {\n                countLoadedImage();\n            }\n            else {\n                $(image).on(['load', 'error'], countLoadedImage);\n            }\n        });\n        if (images.length == 0)\n            resolve();\n    });\n}\n/**\n * Scroll the page to a specific position\n */\nexport function scrollTo(to, duration = 500) {\n    var start = window.pageYOffset;\n    var change = to - start;\n    var currentTime = 0;\n    var increment = 15;\n    var animateScroll = function () {\n        currentTime += increment;\n        window.scrollTo(0, easeInOutQuad(currentTime, start, change, duration));\n        if (currentTime < duration)\n            setTimeout(animateScroll, increment);\n    };\n    animateScroll();\n}\n/**\n *  Create a *Collection* from a string\n */\nexport function parseHTML(html) {\n    var tempDocument = document.implementation.createHTMLDocument();\n    tempDocument.body.innerHTML = html;\n    return new Collection(tempDocument.body.children);\n}\nconst Helpers = {\n    ready: ready,\n    imagesLoaded: imagesLoaded,\n    scrollTo: scrollTo,\n    parseHTML: parseHTML\n};\n/**\n* @ignore\n*/\nexport function addHelpers(base) {\n    return Object.assign(base, Helpers);\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { $ } from '../Framework';\nconst Network = {\n    httpRequest: function (parameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const dataType = parameters.dataType || 'text';\n            var requestInit = {\n                method: parameters.type || 'GET'\n            };\n            if (!(parameters.body instanceof URLSearchParams) && typeof parameters.body !== 'undefined') {\n                const requestBody = new URLSearchParams();\n                for (let [key, value] of Object.entries(parameters.body)) {\n                    requestBody.append(key, value);\n                }\n                requestInit.body = requestBody;\n            }\n            else if (typeof parameters.body !== 'undefined') {\n                requestInit.body = parameters.body;\n            }\n            requestInit.headers = new Headers({ 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8' });\n            const response = yield fetch(parameters.url, requestInit);\n            const text = yield response.text();\n            if (dataType === 'text')\n                return text;\n            if (dataType === 'json')\n                return JSON.parse(text);\n            if (dataType === 'html')\n                return $.parseHTML(text);\n        });\n    }\n};\nexport function addNetwork(base) {\n    return Object.assign(base, Network);\n}\n","import { Collection } from './Collection';\nimport { addHelpers } from './Tools/Helpers';\nimport { addNetwork } from './Tools/Network';\nfunction select(selector) {\n    return new Collection(selector);\n}\nconst framework = addNetwork(addHelpers(select));\nexport { framework as $ };\n","export class Debug {\n    static log(data, color) {\n        if (Debug.isEnabled)\n            console.log('%c' + data, 'color: ' + color);\n    }\n}\nDebug.INFO = '#ffffff';\nDebug.ACTION = '#6610f2';\nDebug.WARNING = '#fd7e14';\nDebug.ERROR = '#d63384';\nDebug.SUCCESS = '#20c997';\nDebug.isEnabled = false;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Debug } from './Tools/Debug';\nimport { $ } from './Framework';\nexport class Component {\n    constructor(typeName, isLoadedAfterImages = false) {\n        this.isLoadedAfterImages = false;\n        this.typeName = 'Component';\n        this.typeName = typeName;\n        this.isLoadedAfterImages = isLoadedAfterImages;\n    }\n    init() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield $.ready();\n            if (this.isLoadedAfterImages)\n                return yield $.imagesLoaded();\n        });\n    }\n    ;\n    toString() {\n        return this.typeName;\n    }\n    warning(message) {\n        Debug.log('𐄂 %c' + this.typeName + ' (' + message + ')', Debug.WARNING);\n    }\n    success() {\n        Debug.log('✓ %c' + this.typeName, Debug.SUCCESS);\n    }\n}\n","import { Collection } from '../Collection';\n/**\n * A collection of HTML elements with shortcut methodes to simplify manipulation\n */\nexport class Core {\n    /**\n     * *selector* can be:\n     * - a string containing a CSS query\n     * - a single *Elem*\n     * - an array of *Elem*\n     */\n    constructor(selector) {\n        this.elements = [];\n        if (typeof selector == 'number')\n            return;\n        if (selector instanceof Collection)\n            return selector;\n        var elements = selector;\n        if (typeof selector === 'string')\n            elements = document.querySelectorAll(selector);\n        if (elements) {\n            if (elements.nodeType || elements === window)\n                elements = [elements];\n            this.elements = Array.prototype.slice.call(elements);\n            ;\n        }\n    }\n    /**\n     * @ignore\n     */\n    [Symbol.iterator]() {\n        return this.elements[Symbol.iterator]();\n    }\n    /**\n     * Return the number of *Elem* in the collection\n     *\n     * @category Collection\n     */\n    get length() {\n        return this.elements.length;\n    }\n    /**\n     * Execute a *callback* on every *Elem*\n     *\n     * @category Collection\n     */\n    forEach(callback, thisArg) {\n        this.elements.forEach(callback);\n    }\n    /**\n     * In contrary of *forEach* this function return each *Elem* as *Collection*.\n     *\n     * @category Collection\n     */\n    each(callback) {\n        this.forEach((item, index) => callback(new Collection(item), index));\n        return this;\n    }\n    /**\n     * Return collection's *Elem* or a single *Elem*\n     *\n     * @category Collection\n     *\n     * @param index Index of the element in the collection\n     */\n    get(index) {\n        return this.elements[index < 0 ? index + this.elements.length : index];\n    }\n    ;\n    /**\n     * Return a new collection containing element at the specified index.\n     *\n     * @category Collection\n    *\n    * @param index Index of the element in the collection\n    */\n    eq(index) {\n        return new Collection(this.get(index));\n    }\n    ;\n    /**\n     * Add an *Elem* to the collection\n     *\n     * @category Collection\n     */\n    add(newItem) {\n        var isAlreadyInCollection = false;\n        this.forEach((item) => {\n            if (newItem === item)\n                isAlreadyInCollection = true;\n        });\n        if (!isAlreadyInCollection)\n            this.elements.push(newItem);\n    }\n    /**\n     * Search for a specific *Elem* in the collection\n     *\n     * @category Collection\n     *\n     * @param selector A css selector to search\n     */\n    search(selector) {\n        var filteredElement = new Collection();\n        this.forEach((item) => {\n            if (item.matches(selector))\n                filteredElement.add(item);\n        });\n        return filteredElement;\n    }\n}\n","import { Core } from './Core';\nexport class CSS extends Core {\n    constructor(selector) {\n        super(selector);\n    }\n    /**\n     * Return *true* if any *Elem* has the given class\n     *\n     * @category CSS class\n     */\n    hasClass(className) {\n        let hasClass = false;\n        this.forEach((item) => {\n            if (item.classList.contains(className))\n                hasClass = true;\n        });\n        return hasClass;\n    }\n    /**\n     * Add the given *classNames* to all *Elem*\n     *\n     * @category CSS class\n     */\n    addClass(classNames) {\n        var classNameList = classNames.split(' ');\n        this.forEach((item) => {\n            item.classList.add(...classNameList);\n        });\n        return this;\n    }\n    /**\n     * Remove the given *classNames* to all *Elem*\n     *\n     * @category CSS class\n     */\n    removeClass(classNames) {\n        var classNameList = classNames.split(' ');\n        this.forEach((item) => {\n            item.classList.remove(...classNameList);\n        });\n        return this;\n    }\n    /**\n     * Toggle the given *classNames* to all *Elem*\n     *\n     * @category CSS class\n     */\n    toggleClass(classNames) {\n        var classNameList = classNames.split(' ');\n        classNameList.forEach((className) => {\n            this.forEach((item) => {\n                item.classList.toggle(className);\n            });\n        });\n        return this;\n    }\n    css(name, value, priority) {\n        if (value || typeof name == 'object') {\n            this.elements.forEach((item) => {\n                if (!priority)\n                    priority = '';\n                if (typeof name == 'object') {\n                    for (let property in name) {\n                        item.style.setProperty(property, name[property].toString(), priority);\n                    }\n                }\n                else {\n                    item.style.setProperty(name, value, priority);\n                }\n            });\n            return this;\n        }\n        else {\n            if (this.elements.length == 0)\n                return '';\n            let styles = window.getComputedStyle(this.elements[0]);\n            return styles.getPropertyValue(name);\n        }\n    }\n}\n","import { CSS } from './CSS';\nimport { Collection } from '../Collection';\nexport class Traversing extends CSS {\n    constructor(selector) {\n        super(selector);\n    }\n    /**\n     * Return the previous element for each *Elem* in the collection\n     *\n     * @category Traversing\n     */\n    prev() {\n        var collection = new Collection();\n        this.forEach((item) => {\n            collection.add(item.previousElementSibling);\n        });\n        return collection;\n    }\n    /**\n     * Return the previous element for each *Elem* in the collection\n     *\n     * @category Traversing\n     */\n    next() {\n        var collection = new Collection();\n        this.forEach((item) => {\n            collection.add(item.nextElementSibling);\n        });\n        return collection;\n    }\n    /**\n     * Return the first element in collection\n     *\n     * @category Traversing\n     * @returns Collection\n     */\n    first() {\n        return new Collection(this.elements[0]);\n    }\n    /**\n     * Return the last element in collection\n     *\n     * @category Traversing\n     * @returns Collection\n     */\n    last() {\n        return new Collection(this.elements[this.elements.length - 1]);\n    }\n    /**\n     * Return the parent element for each *Elem* in the collection\n     *\n     * @category Traversing\n     */\n    parent() {\n        var collection = new Collection();\n        if (this.elements.length > 0)\n            collection = new Collection(this.get(0).parentNode);\n        return collection;\n    }\n    /**\n     * Search for a parent element matching the *selector*\n     *\n     * @category Traversing\n     *\n     * @param selector A css selector\n     */\n    parents(selector) {\n        var collection = new Collection();\n        if (this.elements.length == 0)\n            return collection;\n        var current = this.elements[0];\n        while (current.parentNode != null && current.parentNode != document.documentElement) {\n            let isToBeAdded = true;\n            if (selector) {\n                isToBeAdded = false;\n                if (current.parentNode.matches(selector))\n                    isToBeAdded = true;\n            }\n            if (isToBeAdded)\n                collection.add(current.parentNode);\n            current = current.parentNode;\n        }\n        return collection;\n    }\n    /**\n     * Search of children matching the *selector*\n     *\n     * @category Traversing\n     *\n     * @param selector A css selector\n     */\n    find(selector) {\n        var collection = new Collection();\n        if (this.elements.length == 0)\n            return collection;\n        var foundElements = this.elements[0].querySelectorAll(selector);\n        foundElements.forEach((element) => {\n            collection.add(element);\n        });\n        return collection;\n    }\n}\n","import { Traversing } from './Traversing';\nimport { Collection } from '../Collection';\nexport class HTML extends Traversing {\n    constructor(selector) {\n        super(selector);\n    }\n    /**\n     * Remove the *Elem* for the DOM.\n     *\n     * @category HTML manipulation\n     *\n     */\n    remove() {\n        this.elements.forEach((item) => {\n            item.remove();\n        });\n        return this;\n    }\n    /**\n     * Clear all DOM children of the *Elem*\n     *\n     * @category HTML manipulation\n     *\n     */\n    empty() {\n        this.elements.forEach((item) => {\n            while (item.firstChild)\n                item.removeChild(item.firstChild);\n        });\n        return this;\n    }\n    /**\n     * Return a clone of the collection\n     *\n     * @category HTML manipulation\n     *\n     */\n    clone() {\n        let collection = new Collection();\n        this.elements.forEach((item) => {\n            collection.add(item.cloneNode(true));\n        });\n        return collection;\n    }\n    /**\n     * Insert content, specified by the parameter, to the beginning of each element in the collection\n     *\n     * @category HTML manipulation\n     *\n     */\n    prepend(itemsArray) {\n        if (!Array.isArray(itemsArray))\n            itemsArray = [itemsArray];\n        itemsArray.forEach((items) => {\n            items.forEach((item) => {\n                if (this.elements.length == 0)\n                    return;\n                this.elements[0].insertBefore(item, this.elements[0].firstChild);\n            });\n        });\n        return this;\n    }\n    /**\n     * Insert content, specified by the parameter, to the end of each element in the collection\n     *\n     * @category HTML manipulation\n     *\n     */\n    append(itemsArray) {\n        if (!Array.isArray(itemsArray))\n            itemsArray = [itemsArray];\n        itemsArray.forEach((items) => {\n            items.forEach((item) => {\n                if (this.elements.length == 0)\n                    return;\n                this.elements[0].appendChild(item);\n            });\n        });\n        return this;\n    }\n    /**\n     * Wrap each element in the collection with specified element\n     *\n     * @category HTML manipulation\n     *\n     */\n    wrap(wrapper) {\n        this.elements.forEach((item) => {\n            if (wrapper.length == 0)\n                return;\n            var wrapperCopy = wrapper.get(0).cloneNode();\n            item.parentNode.insertBefore(wrapperCopy, item);\n            wrapperCopy.appendChild(item);\n        });\n        return this;\n    }\n    val(value) {\n        if (typeof value != 'string' && typeof value != 'number') {\n            if (this.elements.length == 0)\n                return '';\n            return this.elements[0].value;\n        }\n        else {\n            this.elements.forEach((item) => {\n                item.value = value.toString();\n            });\n            return this;\n        }\n    }\n    html(value, append) {\n        if (typeof value != 'string' && typeof value != 'number') {\n            if (this.elements.length == 0)\n                return '';\n            return this.elements[0].innerHTML;\n        }\n        else {\n            this.elements.forEach((item) => {\n                if (append) {\n                    item.innerHTML += value.toString();\n                }\n                else {\n                    item.innerHTML = value.toString();\n                }\n            });\n            return this;\n        }\n    }\n    text(value) {\n        if (typeof value != 'string' && typeof value != 'number') {\n            if (this.elements.length == 0)\n                return '';\n            return this.elements[0].textContent;\n        }\n        else {\n            this.elements.forEach((item) => {\n                item.textContent = value.toString();\n            });\n            return this;\n        }\n    }\n    attr(name, value) {\n        if (!value) {\n            if (this.elements.length == 0)\n                return '';\n            return this.elements[0].getAttribute(name);\n        }\n        else {\n            this.elements.forEach((item) => {\n                item.setAttribute(name, value);\n            });\n            return this;\n        }\n    }\n    /**\n     * Remove an attribute on each element in the set.\n     *\n     * @category HTML manipulation\n     *\n     */\n    removeAttr(name) {\n        this.elements.forEach((item) => {\n            item.removeAttribute(name);\n        });\n        return this;\n    }\n    data(name, value) {\n        if (!value) {\n            if (this.elements.length == 0)\n                return '';\n            return this.elements[0].dataset[name];\n        }\n        else {\n            this.elements.forEach((item) => {\n                item.dataset[name] = value;\n            });\n            return this;\n        }\n    }\n}\n","import { HTML } from './HTML';\nimport { Collection } from '../Collection';\nexport class Dimensions extends HTML {\n    constructor(selector) {\n        super(selector);\n    }\n    width(value) {\n        if (value) {\n            this.elements.forEach((item) => {\n                value = (typeof value == 'string') ? value : value + 'px';\n                item.style.setProperty('width', value);\n            });\n            return this;\n        }\n        else {\n            if (this.elements.length == 0)\n                return 0;\n            if (this.elements[0] === window)\n                return window.innerWidth;\n            return this.elements[0].getBoundingClientRect().width;\n        }\n    }\n    height(value) {\n        if (value) {\n            this.elements.forEach((item) => {\n                value = (typeof value == 'string') ? value : value + 'px';\n                item.style.setProperty('height', value);\n            });\n            return this;\n        }\n        else {\n            if (this.elements.length == 0)\n                return 0;\n            if (this.elements[0] === window)\n                return window.innerHeight;\n            return this.elements[0].getBoundingClientRect().height;\n        }\n    }\n    /**\n     * Return element position relative to other element or document\n     *\n     * @category Dimensions\n     *\n     */\n    position(target) {\n        if (this.elements.length == 0)\n            return { x: 0, y: 0 };\n        if (typeof target == 'string')\n            target = new Collection(target);\n        const targetPosition = (target) ? { x: target.get(0).getBoundingClientRect().x, y: target.get(0).getBoundingClientRect().y } : { x: 0, y: 0 };\n        const itemBoundingClientRect = this.elements[0].getBoundingClientRect();\n        const difference = { x: itemBoundingClientRect.x - targetPosition.x, y: itemBoundingClientRect.y - targetPosition.y };\n        const pageScroll = (target) ? { x: 0, y: 0 } : { x: window.pageXOffset, y: window.pageYOffset };\n        return {\n            x: difference.x + pageScroll.x,\n            y: difference.y + pageScroll.y\n        };\n    }\n    /**\n     * Return element position in viewport\n     *\n     * @category Dimensions\n     *\n     */\n    viewportPosition() {\n        if (this.elements.length == 0)\n            return { x: 0, y: 0 };\n        const itemBoundingClientRect = this.elements[0].getBoundingClientRect();\n        return {\n            x: itemBoundingClientRect.x,\n            y: itemBoundingClientRect.y,\n        };\n    }\n}\n","import { Collection } from '../Collection';\nfunction checkParents(items, eventTarget) {\n    var realItem;\n    items.forEach((item) => {\n        if (item === eventTarget) {\n            realItem = item;\n            return;\n        }\n        var parent = eventTarget.parentNode;\n        while (parent !== document) {\n            if (item === parent) {\n                realItem = item;\n                return;\n            }\n            parent = parent.parentNode;\n        }\n    });\n    return realItem;\n}\nexport class EventManager {\n    static uid() {\n        return EventManager.eventCounter++;\n    }\n    static getContext(uid, item, selector) {\n        const contextSelect = (typeof selector == 'string') ? selector + '_' : '';\n        let context = '';\n        if (item === window) {\n            context = 'w_';\n        }\n        else if (item === document) {\n            context = 'd_' + contextSelect;\n        }\n        else {\n            context = 'e_' + contextSelect + uid + '_';\n            Object.defineProperty(item, 'eventUID', {\n                value: uid,\n                writable: true\n            });\n        }\n        return context;\n    }\n    static add(item, eventName, selector, callback) {\n        const context = EventManager.getContext(EventManager.uid(), item, selector) + eventName;\n        EventManager.events[context] = function (event) {\n            if (typeof selector == 'string') {\n                var realTarget = checkParents(new Collection(selector), event.target);\n                if (realTarget)\n                    callback.call(realTarget, event, new Collection(realTarget));\n            }\n            else {\n                callback.call(this, event, new Collection(this));\n            }\n        };\n        item.addEventListener(eventName, EventManager.events[context]);\n    }\n    static remove(item, eventName, selector) {\n        const uid = (item !== document && item !== window) ? item.eventUID : 0;\n        const context = EventManager.getContext(uid, item, selector) + eventName;\n        item.removeEventListener(eventName, EventManager.events[context]);\n        delete EventManager.events[context];\n    }\n}\nEventManager.eventCounter = 0;\nEventManager.events = {};\n","import { Dimensions } from './Dimensions';\nimport { EventManager } from '../Tools/EventManager';\nexport class Events extends Dimensions {\n    constructor(selector) {\n        super(selector);\n    }\n    on(eventNames, selector, callback) {\n        if (typeof eventNames == 'string')\n            eventNames = [eventNames];\n        if (typeof selector == 'function')\n            callback = selector;\n        eventNames.forEach((eventName) => {\n            this.forEach((item) => {\n                EventManager.add(item, eventName, selector, callback);\n            });\n        });\n        return this;\n    }\n    /**\n     * Remove an event handler function for one or more events to the selected elements.\n     *\n     * @category Events\n     *\n     */\n    off(eventNames, selector) {\n        if (typeof eventNames == 'string')\n            eventNames = [eventNames];\n        eventNames.forEach((eventName) => {\n            this.forEach((item) => {\n                EventManager.remove(item, eventName, selector);\n            });\n        });\n        return this;\n    }\n    /**\n     * Trigger an event handler function for one or more events to the selected elements.\n     *\n     * @category Events\n     *\n     */\n    trigger(eventName) {\n        const event = document.createEvent('HTMLEvents');\n        event.initEvent(eventName, true, false);\n        this.forEach((item) => {\n            item.dispatchEvent(event);\n        });\n        return this;\n    }\n}\n","import { Events } from './Collection/Events';\n/**\n * A collection of HTML elements with shortcut methodes to simplify manipulation\n */\nexport class Collection extends Events {\n    /**\n     * *selector* can be:\n     * - a string containing a CSS query\n     * - a single *Elem*\n     * - an array of *Elem*\n     */\n    constructor(selector) {\n        super(selector);\n    }\n}\n","import { Collection } from 'hanako-ts/dist/Collection';\nfunction formatNode(node) {\n    let id = (node.id) ? '#' + node.id : '';\n    let classes = (node.className) ? '.' + node.className : '';\n    return '<span class=\"key\">' + node.tagName.toLowerCase() + '</span><span class=\"attr\">' + id + classes + '</span>';\n}\nexport function traverse(object, level) {\n    if (!level)\n        level = 0;\n    if (level > 2)\n        return;\n    let open = '';\n    let close = '';\n    let message = '';\n    if (object instanceof Collection || (typeof object == 'object' && !(object instanceof Collection))) {\n        open = '{ ';\n        close = ' }';\n    }\n    if (object instanceof Event) {\n        return '[Event \"' + object.type + '\"]';\n    }\n    if (object instanceof Node) {\n        return formatNode(object);\n    }\n    let properties = [];\n    for (const property in object) {\n        if (object[property] instanceof Array) {\n            properties.push('<span class=\"key\">' + property + '</span>: [ ' + traverse(object[property], ++level) + ' ]');\n        }\n        else if (object[property] instanceof Node) {\n            properties.push(formatNode(object[property]));\n        }\n        else {\n            properties.push('<span class=\"key\">' + property + '</span>: ' + object[property]);\n        }\n    }\n    return open + properties.join(', ') + close;\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { $ } from 'hanako-ts/dist-legacy/Framework';\nimport { Component } from 'hanako-ts/dist-legacy/Component';\nimport { traverse } from './Traverse';\nexport class Debug extends Component {\n    constructor(isDebugEnabled = false) {\n        super('Debug', false);\n        this.isDebugEnabled = isDebugEnabled;\n    }\n    init() {\n        const _super = Object.create(null, {\n            init: { get: () => super.init }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            yield _super.init.call(this);\n            this.setupConsole();\n            this.test();\n            this.success();\n        });\n    }\n    setupConsole() {\n        if (!$('body').hasClass('debug'))\n            return;\n        let consoleElement = $.parseHTML('<div class=\"hanako-terminal hanako-terminal-debug\"><pre><code id=\"debug-console\"></code></pre></div>');\n        $('body').append(consoleElement);\n        let consoleConfig = JSON.parse(sessionStorage.getItem('hanako-debug'));\n        if (!consoleConfig)\n            consoleConfig = { position: 'bottom', status: 'out' };\n        consoleElement.addClass(consoleConfig.position);\n        consoleElement.addClass(consoleConfig.status);\n        $(document).on('keyup', (event) => {\n            if (event.altKey && event.code == 'ArrowUp') {\n                consoleElement.addClass('top').removeClass('bottom');\n                consoleConfig.position = 'top';\n                sessionStorage.setItem('hanako-debug', JSON.stringify(consoleConfig));\n            }\n            if (event.altKey && event.code == 'ArrowDown') {\n                consoleElement.addClass('bottom').removeClass('top');\n                consoleConfig.position = 'bottom';\n                sessionStorage.setItem('hanako-debug', JSON.stringify(consoleConfig));\n            }\n            if (event.altKey && event.code == 'KeyD') {\n                consoleElement.toggleClass('in');\n                consoleConfig.status = (consoleElement.hasClass('in')) ? 'in' : 'out';\n                sessionStorage.setItem('hanako-debug', JSON.stringify(consoleConfig));\n            }\n            if (event.altKey && event.code == 'KeyC')\n                $('#debug-console').empty();\n        });\n    }\n    test() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!$('body').hasClass('hanako-test'))\n                return;\n            Debug.print('test', 'Hello world! My name is <span class=\"key\">Hanako</span> and I\\'m here to help you.', '', '<br>', true);\n            Debug.print('test', 'Please wait for images to load...', '', '<br>', true);\n            yield $.imagesLoaded($('img'));\n            let images = $('img');\n            Debug.print('test', images.length + ' images loaded', '', '<br>', true);\n            $('img').each((image) => {\n                Debug.print('test', image, '', '', true);\n                Debug.print('test', '&#9;' + image.attr('src'), '', '<br>');\n            });\n            Debug.print('test', 'Everything seems to be okay. <span class=\"key\">Enjoy your day...</span>', '', '<br>', true);\n        });\n    }\n    static print(target, message, before = '', after = '', showTime = false) {\n        let time = '';\n        if (showTime) {\n            const date = new Date();\n            const hours = (date.getHours() < 10) ? '0' + date.getHours() : date.getHours();\n            const minutes = (date.getMinutes() < 10) ? '0' + date.getMinutes() : date.getMinutes();\n            const seconds = (date.getSeconds() < 10) ? '0' + date.getSeconds() : date.getSeconds();\n            time = hours + ':' + minutes + ':' + seconds + '\\t';\n        }\n        if (typeof message === 'object')\n            message = traverse(message);\n        if (typeof message === 'number')\n            message = '<span class=\"attr\">' + message + '</span>';\n        $('#' + target + '-console').html(time + before + message + after, true);\n    }\n    static log(message) {\n        if (!$('body').hasClass('debug'))\n            return;\n        Debug.print('debug', message, '', '<br>', true);\n        $('#debug-console').parent().get(0).scrollTop = $('#debug-console').parent().get(0).scrollHeight;\n    }\n}\n","import { Debug } from '../../components/Debug';\nimport { Empty } from '../../components/Empty';\nimport { Menu } from '../../components/Menu';\n(new Debug()).init();\n(new Empty()).init();\n(new Menu()).init();\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Component } from 'hanako-ts/dist-legacy/Component';\nexport class Empty extends Component {\n    constructor() {\n        super('Empty', false);\n    }\n    init() {\n        const _super = Object.create(null, {\n            init: { get: () => super.init }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            yield _super.init.call(this);\n            this.success();\n        });\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { $ } from 'hanako-ts/dist-legacy/Framework';\nimport { Component } from 'hanako-ts/dist-legacy/Component';\nexport class Menu extends Component {\n    constructor() {\n        super('Menu', false);\n    }\n    init() {\n        const _super = Object.create(null, {\n            init: { get: () => super.init }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            yield _super.init.call(this);\n            $('#button-toggle-menu').on('click', (event, button) => {\n                button.toggleClass('active');\n                $('#main-menu').toggleClass('opened');\n            });\n            this.success();\n        });\n    }\n}\n"],"sourceRoot":""}